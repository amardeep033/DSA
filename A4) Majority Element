n/2 elements
-> Boyer Mooreâ€™s Voting Algorithm (try to cancel out and reset)
-> assume curr is the one 
-> if eq ++, else --
-> if 0 ------> reset
-> verify if the case is there majority elem doesnt always exist

----------------------------------------------------------------------------------------------------------

n/3 elements
-> same but extended, ie, two count and two elem
-> NOTE: at last traverse and check, if really

----------------------------------------------------------------------------------------------------------

int c1=0;
int c2=0;
int e1=INT_MIN;
int e2=INT_MIN;

 for (int num : nums) {
    if (num == e1) {
        c1++;
    } else if (num == e2) {
        c2++;
    } else if (c1 == 0) {
        e1 = num;
        c1 = 1;
    } else if (c2 == 0) {
        e2 = num;
        c2 = 1;
    } else {
        c1--;
        c2--;
    }
}

c1 = 0;
c2 = 0;
for (int num : nums) {
    if (num == e1) c1++;
    else if (num == e2) c2++;
}

vector<int> res;
int n = nums.size();
if (c1 > n / 3) res.push_back(e1);
if (c2 > n / 3) res.push_back(e2);
return res;

-> while head not null
-> if i odd, wove odd
-> if i even, wove even
------------------------------------------------------------------------------------------------------------------------------
if(head==NULL || head->next==NULL){
    return head;
}
ListNode* odd = NULL;
ListNode* even = NULL;
ListNode* res = NULL;
ListNode* res2 = NULL;
int i=1;
while(head!=NULL)
{
    if(i%2!=0){
        if(odd==NULL){
            odd=head;
            res=head;
        } else {
            odd->next=head;
            odd=odd->next;
        }
    } else {
        if(even==NULL){
            even=head;
            res2=head;
        } else {
            even->next=head;
            even=even->next;
        }
    }
    head=head->next;
    i++;
}
even->next=NULL;
odd->next=res2;
return res;

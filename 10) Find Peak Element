-> if all distinct, surely peak exist => no plateau
-> also, arr[-1] == arr[n] == -∞
-> at a given point we can be at: 1a_2a_3_2b_1b => 1a/1b(valley), 2a(incline), 3(peak), 2b(decline)
-> valley,incline=> go right else go left
-> handle edge case at beginning
-----------------------------------------------------------------------------------------------------------------
if(nums.size()==1){
    return 0;
} else if(nums[0]>nums[1]){
    return 0;
} else if(nums[nums.size()-1]>nums[nums.size()-2]){
    return nums.size()-1;
} else {
    int l=1;
    int r=nums.size()-2;
    while(l<=r){
        int mid=(l+r)/2;
        if(nums[mid]>nums[mid-1] && nums[mid]>nums[mid+1]){
            return mid;
        } else if (nums[mid]<nums[mid+1]) {
            l=mid+1;
        } else {
            r=mid-1;
        }
    }
}

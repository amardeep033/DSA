-> next : traverse right to left
-> just next: stack will be involved, latest at top(LIFO)
-> desc -> greater than all -> -1 ---------> top of all, as latest+greatest
-> asc -> greater than none -> next val -------> should be on top
-> example: 1| 235 -> res is 2 -----> 4| 235 -> res is 5 and 4 will overatke 2,3
-> 3| 1245 ====> 345
-------------------------------------------------------------------------------------------------------------------------------------
map<int,int> mp;
stack<int> st;
for(int i=nums1.size()-1;i>=0;i--){
    while(!st.empty() && nums1[i]>=st.top()){
        st.pop();
    }
    if(st.empty()){
        mp[nums1[i]]=-1;
    } else {
        mp[nums1[i]]=st.top();
    }
    st.push(nums1[i]);
}
vector<int> res;
for(int i=0;i<nums2.size();i++){
    res.push_back(mp[nums2[i]]);
}
return res;

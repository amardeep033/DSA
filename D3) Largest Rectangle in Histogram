-> each self -- to the left --- to the right
-> breaks when next smaller 
-> store next smaller from each dir
-> (right - left - 1) * self's height ===> maxi of all is ans
-------------------------------------------------------------------------------------------------------
int n=arr.size();

vector<int> l(n, -1);
stack<pair<int, int>> st;
for(int i=0;i<n;i++){
    while(!st.empty() && arr[i]<=st.top().first){
        st.pop();
    }
    if(!st.empty()){
        l[i]=st.top().second;
    }
    st.push({arr[i], i});
}

vector<int> r(n, n);
stack<pair<int, int>> st2;
for(int i=n-1;i>=0;i--){
    while(!st2.empty() && arr[i]<=st2.top().first){
        st2.pop();
    }
    if(!st2.empty()){
        r[i]=st2.top().second;
    }
    st2.push({arr[i],i});
}

int maxi=0;
for(int i=0;i<n;i++){
    maxi=max(maxi,(r[i]-l[i]-1)*arr[i]);
}
return maxi;

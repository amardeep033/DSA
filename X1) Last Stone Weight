-> priority queue
-> as a heap: parent > children and should be a complete binary tree
-> 274181 => heapify up(241) => 472181 => heapify up(487) => 872141
-> when you want to delete -> remove root -> replace by last -> then heapify down 
-> 872141 => 17214 => 27114
-> so basically remove using heapify down, insert using heapify up(by adding at last)
-> insert(logn) delete(logn) search(n) build(n) max(1)
-> heap => comp bt + parent>children + better for max/min
-> bst => no shape + left<root<right + better for search
-------------------------------------------------------------------------------------------------------

priority_queue<int> pq;
for(int i=0;i<arr.size();i++){
    pq.push(arr[i]);
}
while(pq.size()>1){
    int a=pq.top();
    pq.pop();
    int b=pq.top();
    pq.pop();
    if(a>b){
        pq.push(a-b);
    } else if(b>a){
        pq.push(b-a);
    } else {

    }
}
if(pq.size()==1){
    return pq.top();
} else {
    return 0;
}

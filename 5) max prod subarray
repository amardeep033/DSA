1. (all +ve or even -ve) and (no zero) => prod of all
2. zero => reset prod to 1 and split array
3. if odd, removing only one -ve of both edge once => gives even -ve
4. also storing mini and multiplying it with -ve will make it maxi => swap
------------------------------------------------------------------------------

int mini=nums[0];
int maxi=nums[0];
int res=nums[0];
for(int i=1;i<nums.size();i++) //check how it handles 0
{
    if(nums[i]<0)
        swap(maxi,mini);
    maxi=max(nums[i],nums[i]*maxi);
    mini=min(nums[i],nums[i]*mini);
    res=max(res,maxi);
}
return res;
------------------------------------------------------------------------------

int maxi=INT_MIN;
int pref=1;
int suff=1;
for(int i=0;i<nums.size();i++){ //or iterate left to right and then right to left
    if(pref==0){
        pref=1;
    }
    if(suff==0){
        suff=1;
    }
    pref=pref*nums[i];
    suff=suff*nums[nums.size()-i-1];
    maxi=max(maxi,max(pref,suff));
}
return maxi;

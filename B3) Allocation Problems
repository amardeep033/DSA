-> array is given: books pages [12,34,67.90]
-> one count is given: student 2
-> with some constraints: maxi page sum to one student be min
-> allocation kind of prob: allocate all books, continuous allocation

-> find range of possible ans: 0 to sum -> do binary search -> find possibility
-> example: 2226. Maximum Candies Allocated to K Children or 2226. Maximum Candies Allocated to K Children or 1011. Capacity To Ship Packages Within D Days
-----------------------------------------------------------------------------------------------------------------
-> find range
        int l=0;
        int r=0;
        for(int i=0;i<arr.size();i++) {
            r=r+arr[i];
        }
        int res=r;
-> binary search on possible ans
        while(l<=r){
            int mid=(l+r)/2;
            int c=1;
            int sum=0;
            bool is_possible = true;
            for(int i=0;i<arr.size();i++){
                if(arr[i]>mid){
                    is_possible=false;
                    l=mid+1;
                    break;
                }
                else if(sum+arr[i]<=mid){
                    sum=sum+arr[i];
                }
                else {
                    c++;
                    sum=arr[i];
                }

                if(c>d){
                    is_possible=false;
                    l=mid+1;
                    break;
                } 
            }
-> check if is possible
            if(is_possible==true){
                res=min(res,mid);
                r=mid-1;
            }
        }
        return res;
    }
};
